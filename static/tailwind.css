@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-size: 16px;
    color: #0d1717;
    font-family: "Albert Sans";
    /* Set your desired default font size here */
  }
}

.animate-progress {
  animation: move 1s linear infinite;
}

.cf-error-details {
  margin: 16px;
}

.cf-error-details h1 {
  font-size: 40px;
  font-weight: 600;
}

.cf-error-details ul {
  list-style-type: none; /* Remove default list styles */
  padding: 0; /* Remove default padding */
}

.cf-error-details ul > li {
  display: inline; /* Display list items inline */
  margin-right: 10px; /* Add spacing between list items if needed */
}

#details ul {
  list-style-type: none;
  /* Remove default list styles */
  padding: 0;
  /* Remove default padding */
  display: flex;
  flex-direction: column;
  align-items: center;
}

@media (min-width: 1024px) {
  #details ul {
    list-style-type: none;
    display: inline;
    /* Remove default list styles */
    padding: 0;
    /* Remove default padding */
  }
  #details ul > li {
    display: inline;
    /* Display list items inline */
    margin-right: 10px;
    /* Add spacing between list items if needed */
  }
  #details ul > li:not(:first-child)::before {
    content: "\2022‎‎ ‎ ‎ ";
    left: 0;
  }
}
.inline-list li {
  display: inline; /* Display list items inline */
  margin-right: 10px; /* Add spacing between list items if needed */
}

/* Style for each inner container */
.inner-container {
  flex: 1;
  border-radius: 16px;
  gap: 16px;
  padding: 16px;
  z-index: 10;
  background-color: #eff0f0; /* Grey background */
}

/* Style for h3 inside each inner container */
.inner-container h3 {
  font-weight: bold; /* Bold font for h3 */
}

.decorative-stroke::before {
  content: attr(data-text);
  position: absolute;
  pointer-events: none; /* for text selection */
  -webkit-text-stroke: 0px;
}

.decorative-stroke {
  margin: 0.5em;
  font-size: 48px;

  /* trick */
  position: relative;
  -webkit-text-stroke: 20px #9900e5;
  color: white;
}

@keyframes move {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(500%);
  }
}

@layer components {
  .child-data-open:has(> [data-open]) {
    visibility: var(--visibility-data-open);
  }

  ::-webkit-scrollbar {
    @apply h-1 w-1 bg-transparent;
  }

  .circles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .circles li {
    @apply bg-gray-300;
    position: absolute;
    display: block;
    list-style: none;
    width: 20px;
    height: 20px;
    animation: animate 25s linear infinite;
    bottom: -150px;
  }

  .circles li:nth-child(1) {
    left: 25%;
    width: 80px;
    height: 80px;
    animation-delay: 0s;
  }

  .circles li:nth-child(2) {
    left: 10%;
    width: 20px;
    height: 20px;
    animation-delay: 2s;
    animation-duration: 12s;
  }

  .circles li:nth-child(3) {
    left: 70%;
    width: 20px;
    height: 20px;
    animation-delay: 4s;
  }

  .circles li:nth-child(4) {
    left: 40%;
    width: 60px;
    height: 60px;
    animation-delay: 0s;
    animation-duration: 18s;
  }

  .circles li:nth-child(5) {
    left: 65%;
    width: 20px;
    height: 20px;
    animation-delay: 0s;
  }

  .circles li:nth-child(6) {
    left: 75%;
    width: 110px;
    height: 110px;
    animation-delay: 3s;
  }

  .circles li:nth-child(7) {
    left: 35%;
    width: 150px;
    height: 150px;
    animation-delay: 7s;
  }

  .circles li:nth-child(8) {
    left: 50%;
    width: 25px;
    height: 25px;
    animation-delay: 15s;
    animation-duration: 45s;
  }

  .circles li:nth-child(9) {
    left: 20%;
    width: 15px;
    height: 15px;
    animation-delay: 2s;
    animation-duration: 35s;
  }

  .circles li:nth-child(10) {
    left: 85%;
    width: 150px;
    height: 150px;
    animation-delay: 0s;
    animation-duration: 11s;
  }

  .rotate-caret > summary > svg {
    @apply transition-transform;
  }

  .rotate-caret[open] > summary > svg {
    @apply rotate-90;
  }

  @keyframes animate {
    0% {
      transform: translateY(0) rotate(0deg);
      opacity: 1;
      border-radius: 0;
    }

    100% {
      transform: translateY(-1000px) rotate(720deg);
      opacity: 0;
      border-radius: 50%;
    }
  }

  @keyframes checkAnimation {
    0% {
    }

    25% {
      transform: scale(3);
      @apply border-[1px] bg-transparent;
    }

    75% {
      transform: scale(3);
      @apply border-[1px] bg-transparent;
    }

    100% {
      @apply border-[1px];
    }
  }
}
